.metronome {
  height: 100%;
  // flex: 1;
  // background-color: lightcyan;
  display: flex;
  flex-direction: column;

  @media (orientation: landscape) {
    flex-direction: row;
  }

  .top {
    height: 100%; // display: flex;
    display: flex;
    flex-direction: column;
    flex: 1;
    text-align: center;

    .tempo {
      margin: auto;
      width: 14rem;
      text-align: center;
      user-select: none;
      font-size: 6rem;
      padding: 1rem;
      border-radius: var(--border-radius);

      &:focus,
      &:hover {
        outline: var(--outline-focus);
      }

      &__play {
        &:focus,
        &:hover {
          box-shadow: var(--box-shadow-metronome);
        }
      }
    }
  }

  .bottom {
    // background-color: lightcoral;

    display: flex;
    flex-direction: column;

    @media (orientation: landscape) {
      flex-direction: row-reverse;
    }

    input[type='range'] {
      width: 100%;
      appearance: none;
      background-color: var(--color-gray);
      border-radius: 2rem;
      height: 0.7rem;
      margin-bottom: 2rem;

      @media (orientation: landscape) {
        height: 100%;
        width: 0.7rem;
        margin-left: 2rem;
        margin-bottom: 0;
        writing-mode: vertical-rl;
        direction: rtl;
      }

      &::-webkit-slider-thumb {
        appearance: none;
        width: 2rem;
        height: 2rem;
        background-color: var(--color-black);
        border: 2px solid var(--color-gray-light);
        border-radius: 50%;
      }
    }

    .grid {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      column-gap: 1rem;
      row-gap: 1rem;

      .text {
        grid-column: 1 / 5;

        p {
          text-align: center;
          margin-bottom: 0.5rem;
        }

        code {
          font-size: 1rem;
          text-transform: lowercase;
        }
      }

      .icon {
        align-self: center;
        justify-self: center;
        border-radius: var(--border-radius);
        height: 2.4rem;
        width: 2.4rem;
        cursor: pointer;

        &:focus,
        &:hover {
          outline: var(--outline-focus);
        }
      }

      .start {
        grid-column: 2 / 4;
      }

      @media (orientation: landscape) {
        grid-template-columns: repeat(2, 1fr);

        .light {
          grid-column: 1;
          grid-row: 1;
        }

        .mute {
          grid-column: 1;
          grid-row: 2;
        }

        .plusfive {
          grid-column: 2;
          grid-row: 1;
        }

        .plusone {
          grid-column: 3;
          grid-row: 1;
        }

        .minusone {
          grid-column: 3;
          grid-row: 2;
        }

        .minusfive {
          grid-column: 2;
          grid-row: 2;
        }

        .start {
          grid-row: 3;
          grid-column: 1 / 4;
        }
      }
    }
  }
}
